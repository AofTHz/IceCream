/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package icecream;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AofTHz
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    int SelectedRow;
    String IDSelect;
    String Mode;
    String DataTemp = "";
    int TastePrice = 0;
    int CupPrice = 0;
    int ToppingPrice = 0;
    int Total;

    private ArrayList<String> TasteLoad() {
        String TargetTable = "[NewData].[dbo].[Table_1]";
        ArrayList<String> TasteLoad = new ArrayList<>();
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();

            String get = "SELECT * FROM " + TargetTable;

            ResultSet rs = stm.executeQuery(get);
            while (rs.next()) {
                String id = rs.getString("รสชาติ");
                ComboBox.addItem(id);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
        return TasteLoad;
    }

    private ArrayList<String> CupLoad() {
        String TargetTable = "[NewData].[dbo].[Table_2]";
        ArrayList<String> CupLoad = new ArrayList<>();
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();

            String get = "SELECT * FROM " + TargetTable;

            ResultSet rs = stm.executeQuery(get);
            while (rs.next()) {
                String id = rs.getString("ชื่อภาชนะ");
                ComboBox.addItem(id);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
        return CupLoad;
    }
    private ArrayList<OrderData> LoadOrder() {
        String TargetTable = "[NewData].[dbo].[order]";
        ArrayList<OrderData> Order = new ArrayList<>();
        Order.clear();
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();

            String get = "SELECT * FROM " + TargetTable;

            ResultSet rs = stm.executeQuery(get);
            OrderData od;
            while (rs.next()) {
                 od = new OrderData(rs.getString("ID"),rs.getString("Taste"),rs.getString("Cup"),rs.getString("Topping"));
                Order.add(od);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
        return Order;
    }
    
    
    private ArrayList<String> ToppingLoad() {
        String TargetTable = "[NewData].[dbo].[topping]";
        ArrayList<String> Topping = new ArrayList<>();
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();

            String get = "SELECT * FROM " + TargetTable;

            ResultSet rs = stm.executeQuery(get);
            while (rs.next()) {
                String id = rs.getString("ชื่อ");
                ComboBox.addItem(id);
            }
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
        return Topping;
    }
     public void show_order() {
         
        ArrayList<OrderData> list = LoadOrder();
        DefaultTableModel model = (DefaultTableModel) TableO.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];

        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).GetOrderID();
            row[1] = list.get(i).GetTaste();
            row[2] = list.get(i).GetCup();
            row[3] = list.get(i).GetTopping();
            model.addRow(row);

        }
    }
    private void AddOrder() {
        String TargetTable = "[NewData].[dbo].[order]";
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();

            String get = "INSERT INTO " + TargetTable + " (Taste, Cup, Topping) VALUES ('','','')";

            stm.executeUpdate(get);
            
            show_order();
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
    }
    private void UpdateItem(){
        String TargetTable = "[NewData].[dbo].[order]";
        String comboSelect = "'"+ ComboBox.getSelectedItem().toString()+"'";
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();
            
            String get = ""; 
            if(Mode == "Taste"){
                get = "UPDATE " + TargetTable + " SET Taste = "+comboSelect+" WHERE id = "+IDSelect;
            }else if(Mode =="Cup"){
                get = "UPDATE " + TargetTable + " SET Cup = "+comboSelect+" WHERE id = "+IDSelect;
            }else if(Mode == "Topping"){
                get = "UPDATE " + TargetTable + " SET Topping = "+comboSelect+" WHERE id = "+IDSelect;
            }
              
            stm.executeUpdate(get);
            show_order();
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
    }
    private void DeleteOrder(){
        String TargetTable = "[NewData].[dbo].[order]";
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();
            
            String get = "DELETE FROM "+TargetTable+" WHERE id = "+IDSelect; 
            
            stm.executeUpdate(get);
            show_order();
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
    }
    private void ClearOrder(){
        String TargetTable = "[NewData].[dbo].[order]";
        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();
            
            String get =  "UPDATE " + TargetTable + " SET Taste = '',Cup = '', Topping = ''"+" WHERE id = "+IDSelect;
            
            stm.executeUpdate(get);
            show_order();
        } catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
        }
    }
    private ArrayList<OrderData>CalculateData(){
        ArrayList<OrderData> Calculate = new ArrayList<>();
        String TargetTable = "[NewData].[dbo].[order]";

        try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();
            
            String get =  "SELECT * FROM " + TargetTable+" WHERE id = "+IDSelect;
           
            ResultSet rs = stm.executeQuery(get);
            OrderData od;
            while (rs.next()){
                od = new OrderData(rs.getString("id"),rs.getString("Taste"),rs.getString("Cup"),rs.getString("Topping"));
                Calculate.add(od);
                 
            }
             } catch (SQLException e) { 
            System.out.println(e);
            System.exit(-1);
        }
        return Calculate;
    }
 
    
    private void getTastePrice(){
            
            String TargetTable = "[NewData].[dbo].[Table_1]";
            String SpecialColumn = '"'+"ราคา"+'"';
            String SpecialColumn2 = '"'+"รสชาติ"+'"';
           try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();
            
            
            String get =  "SELECT "+SpecialColumn+" FROM " + TargetTable+" WHERE "+SpecialColumn2+" = "+"'"+DataTemp+"'";
            System.out.println(get);
            ResultSet rs = stm.executeQuery(get);
            while (rs.next()){
                TastePrice = rs.getInt("ราคา");
               
            }
            
            
            
        }catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
           }
    }
    private void getCupPrice(){
            String TargetTable = "[NewData].[dbo].[Table_2]";
            String SpecialColumn = '"'+"ราคา"+'"';
            String SpecialColumn2 = '"'+"ชื่อภาชนะ"+'"';
           try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();
            
            
            String get =  "SELECT "+SpecialColumn+" FROM " + TargetTable+" WHERE "+SpecialColumn2+" = "+"'"+DataTemp+"'";
            
            ResultSet rs = stm.executeQuery(get);
            while (rs.next()){
                CupPrice = rs.getInt("ราคา");
            }
            
        }catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
           }
    }
    private void getToppingPrice(){
            String TargetTable = "[NewData].[dbo].[topping]";
            String SpecialColumn = '"'+"ราคา"+'"';
            String SpecialColumn2 = '"'+"ชื่อ"+'"';
           try {
            Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ice", UserLogin.username, UserLogin.password);
            Statement stm = con.createStatement();
            
            
            String get =  "SELECT "+SpecialColumn+" FROM " + TargetTable+" WHERE "+SpecialColumn2+" = "+"'"+DataTemp+"'";
            
            ResultSet rs = stm.executeQuery(get);
            while (rs.next()){
                ToppingPrice = rs.getInt("ราคา");
            }
            
        }catch (SQLException e) {
            System.out.println(e);
            System.exit(-1);
           }
    }
   public void Calculate() {
         
        ArrayList<OrderData> list = CalculateData();
        for (int i = 0; i < list.size(); i++) {
            DataTemp =list.get(i).GetTaste();
            getTastePrice();
            DataTemp =list.get(i).GetCup();
            getCupPrice();
            DataTemp = list.get(i).GetTopping();
            getToppingPrice();
            Total = TastePrice + CupPrice + ToppingPrice;
            TotalLabel.setText(Integer.toString(Total));
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        RemoveB = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        AddOB = new javax.swing.JButton();
        CalB = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        AddItemB = new javax.swing.JButton();
        ComboBox = new javax.swing.JComboBox<>();
        ClearB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableO = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        Recive = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ChangeLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        TotalLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IceCream Database");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 153, 255));

        RemoveB.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        RemoveB.setText("Remove");
        RemoveB.setEnabled(false);
        RemoveB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveBActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        jButton2.setText("Cup");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        AddOB.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        AddOB.setText("Add Order");
        AddOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddOBActionPerformed(evt);
            }
        });

        CalB.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CalB.setText("Calculate");
        CalB.setEnabled(false);
        CalB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalBActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        jButton1.setText("Ice Cream taste");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        jButton3.setText("Toppings");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        AddItemB.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        AddItemB.setText("ADD");
        AddItemB.setEnabled(false);
        AddItemB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddItemBActionPerformed(evt);
            }
        });

        ComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboBox.setSelectedItem(jButton1);

        ClearB.setFont(new java.awt.Font("Mongolian Baiti", 1, 14)); // NOI18N
        ClearB.setText("Clear");
        ClearB.setEnabled(false);
        ClearB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jScrollPane1.setAutoscrolls(true);

        TableO.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TableO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Taste", "Cup", "Topping"
            })
            {
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            }
        );
        TableO.setAutoscrolls(false);
        TableO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableOMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableO);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(AddItemB, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(AddOB, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(RemoveB, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(ClearB, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CalB, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ComboBox)
                    .addComponent(AddItemB, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddOB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RemoveB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CalB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        Recive.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Baht");

        jLabel1.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Total price");

        jLabel3.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Baht");

        ChangeLabel.setBackground(new java.awt.Color(255, 255, 255));
        ChangeLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ChangeLabel.setOpaque(true);

        jLabel4.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Baht");

        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton9.setText("Check");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Recive price");

        jLabel7.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(" Change money");

        TotalLabel.setBackground(new java.awt.Color(255, 255, 255));
        TotalLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        TotalLabel.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ChangeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Recive, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(TotalLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Recive, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChangeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 30, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if (Recive.toString() != ""){
            int overall = Integer.parseInt(Recive.getText()) - Total;
            ChangeLabel.setText(Integer.toString(overall));
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ComboBox.removeAllItems();
        TasteLoad();
        Mode = "Taste";

    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        ComboBox.removeAllItems();
        Mode = "Taste";
        TasteLoad();
        show_order();
        
    }//GEN-LAST:event_formWindowOpened

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ComboBox.removeAllItems();
        CupLoad();
        Mode = "Cup";
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ComboBox.removeAllItems();
        ToppingLoad();
        Mode = "Topping";
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void AddOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddOBActionPerformed
        // TODO add your handling code here:
        
        AddOrder();
        
    }//GEN-LAST:event_AddOBActionPerformed

    private void TableOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableOMouseClicked
        // TODO add your handling code here:
        if(TableO.getSelectedRow() != -1){
            
            SelectedRow = TableO.getSelectedRow();
            IDSelect = TableO.getValueAt(SelectedRow, 0).toString();
            AddItemB.setEnabled(true);
            RemoveB.setEnabled(true);
            ClearB.setEnabled(true);
            CalB.setEnabled(true);
        }
    }//GEN-LAST:event_TableOMouseClicked

    private void AddItemBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddItemBActionPerformed
        // TODO add your handling code here:
        UpdateItem();
        AddItemB.setEnabled(false);
        RemoveB.setEnabled(false);
        ClearB.setEnabled(false);
        CalB.setEnabled(false);
        
    }//GEN-LAST:event_AddItemBActionPerformed

    private void RemoveBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveBActionPerformed
        // TODO add your handling code here:
        DeleteOrder();
        AddItemB.setEnabled(false);
        RemoveB.setEnabled(false);
        ClearB.setEnabled(false);
        CalB.setEnabled(false);
    }//GEN-LAST:event_RemoveBActionPerformed

    private void ClearBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBActionPerformed
        // TODO add your handling code here:
        ClearOrder();
        AddItemB.setEnabled(false);
        RemoveB.setEnabled(false);
        ClearB.setEnabled(false);
        CalB.setEnabled(false);
    }//GEN-LAST:event_ClearBActionPerformed

    private void CalBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalBActionPerformed
        // TODO add your handling code here:
        Calculate();
    }//GEN-LAST:event_CalBActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddItemB;
    private javax.swing.JButton AddOB;
    private javax.swing.JButton CalB;
    private javax.swing.JLabel ChangeLabel;
    private javax.swing.JButton ClearB;
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JTextField Recive;
    private javax.swing.JButton RemoveB;
    private javax.swing.JTable TableO;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
